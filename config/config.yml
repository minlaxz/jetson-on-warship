mqtt:
  enabled: True
  host: frigate-mqtt
  port: 1883
  topic_prefix: frigate
  client_id: frigate
  stats_interval: 30  # default -> 60

detectors:
  tensorrt:
    type: tensorrt
    device: 0

database:
  path: /config/frigate.db

model:
  path: /config/model_cache/tensorrt/yolov7-320.trt
  width: 320
  height: 320
  input_pixel_format: rgb
  input_tensor: nchw # because it's yolo model

audio:
  enabled: False
  max_not_heard: 30
  min_volume: 500
  listen:
    - bark
    - fire_alarm
    - scream
    - speech
    - yell
  filters:
    speech:
      threshold: 0.8

logger:
  default: info
  logs:
    frigate.event: debug

environment_vars:
  EXAMPLE_VAR: value

birdseye:
  enabled: True
  restream: False
  width: 1280
  height: 720
  quality: 15
  mode: objects
  inactivity_threshold: 30
  layout:
    scaling_factor: 2.0
    max_cameras: 1

# More information about presets at https://docs.frigate.video/configuration/ffmpeg_presets
ffmpeg:
  global_args: -hide_banner -loglevel warning -threads 2
  hwaccel_args: preset-jetson-h264
  input_args: preset-rtsp-generic
  output_args:
    detect: -threads 2 -f rawvideo -pix_fmt yuv420p
    record: preset-record-generic
    rtmp: preset-rtmp-generic
  retry_interval: 10

objects:
  track:
    - car
    - plate

detect:
  fps: 5
  enabled: True
  min_initialized: 2
  max_disappeared: 25
  stationary:
    interval: 50
    threshold: 50
    max_frames:
      default: 3000
      objects:
        car: 1000
        plate: 1000
  annotation_offset: 0

record:
  enabled: True
  # Optional: Number of minutes to wait between cleanup runs (default: shown below)
  # This can be used to reduce the frequency of deleting recording segments from disk if you want to minimize i/o
  expire_interval: 60
  sync_recordings: False
  retain:
    days: 0
    mode: active_objects
  export:
    timelapse_args: "-vf setpts=0.04*PTS -r 30"
  events:
    pre_capture: 10
    post_capture: 10
    objects:
      - car
      - plate
    required_zones: []
    retain:
      default: 10
      mode: motion
      objects:
        car: 15
        plate: 15

snapshots:
  enabled: True
  clean_copy: True
  timestamp: True
  bounding_box: True
  crop: False
  height: 175
  required_zones: []
  retain:
    default: 10
    objects:
      car: 15
      plate: 15
  quality: 70

rtmp:
  enabled: False

# Uses https://github.com/AlexxIT/go2rtc (v1.8.3)
go2rtc:
  streams:
    outdoor_rtsp_cam:
      - rtsp://admin:L20E52F6@192.168.0.117:554/cam/realmonitor?channel=1&subtype=0
    outdoor_rtsp_cam_sub:
      - rtsp://admin:L20E52F6@192.168.0.117:554/cam/realmonitor?channel=1&subtype=1

# Required
cameras:
  # Required: name of the camera
  outdoor_camera:
    enabled: True
    ffmpeg:
      inputs:
        - path: rtsp://127.0.0.1:8554/outdoor_rtsp_cam
          roles:
            - audio
            - record
          hwaccel_args: preset-jetson-h265
        - path: rtsp://127.0.0.1:8554/outdoor_rtsp_cam_sub
          roles:
            - detect
          hwaccel_args: preset-jetson-h264
    live:
      stream_name: outdoor_rtsp_cam_sub
    best_image_timeout: 60
    webui_url: ""

    mqtt:
      enabled: True
      timestamp: True
      bounding_box: True
      crop: True
      height: 270
      quality: 70
      required_zones: []

    ui:
      order: 0
      dashboard: True

    onvif:
      host: 192.168.0.117
      port: 80
      user: admin
      password: L20E52F6
      autotracking:
        enabled: False
        calibrate_on_startup: False
        zooming: disabled

    birdseye:
      order: 0

ui:
  live_mode: mse
  use_experimental: False
  time_format: browser
  date_style: short
  time_style: medium
  strftime_fmt: "%Y/%m/%d %H:%M"

telemetry:
  network_interfaces:
    - eth
    - enp
    - eno
    - ens
    - wl
    - lo
  stats:
    amd_gpu_stats: True
    intel_gpu_stats: True
    network_bandwidth: True
  version_check: True
