FROM ultralytics/ultralytics:latest-jetson-jetpack4

WORKDIR /home/app
ENV YOLO_MODELS_DIR=/home/app/yolo_models
ENV OCR_MODELS_DIR=/home/app/ocr_models

RUN apt-get update && \
    apt-get install --no-install-recommends \
    vim nmap curl unzip -yqq && rm -rf /var/lib/apt/lists/*

# OCR models
RUN mkdir -p ./ocr_models
RUN curl -fsSL https://github.com/JaidedAI/EasyOCR/releases/download/pre-v1.1.6/craft_mlt_25k.zip -o ./ocr_models/craft_mlt_25k.zip
RUN curl -fsSL https://github.com/JaidedAI/EasyOCR/releases/download/v1.3/english_g2.zip -o ./ocr_models/english_g2.zip
RUN unzip ./ocr_models/craft_mlt_25k.zip -d ./ocr_models/
RUN unzip ./ocr_models/english_g2.zip -d ./ocr_models/
RUN rm ./ocr_models/*.zip

# YOLO models
RUN mkdir -p ./yolo_models

RUN rm -rf /usr/src/ultralytics/onnxruntime_gpu-1.8.0-cp38-cp38-linux_aarch64.whl \
    /usr/src/ultralytics/tensorrt-8.2.0.6-cp38-none-linux_aarch64.whl \
    /usr/src/ultralytics/torch-1.11.0a0+gitbc2c6ed-cp38-cp38-linux_aarch64.whl \
    /usr/src/ultralytics/torchvision-0.12.0a0+9b5a3fe-cp38-cp38-linux_aarch64.whl

# Install dependencies
RUN apt-get update && \
    apt-get install --no-install-recommends \
    vim nmap curl unzip -yqq && rm -rf /var/lib/apt/lists/*

# COPY --from=base /usr/src/app/wheels /wheels
# COPY --from=base /usr/src/app/requirements.txt .
# RUN pip3 install -U pip && pip3 install --no-cache /wheels/* && rm -rf /wheels
COPY ./requirements.txt .
RUN pip3 install --no-cache-dir -r requirements.txt

# Copy the application
COPY ./controller .

EXPOSE 5000

CMD ["gunicorn", "-w", "1", "--threads", "2", "-b", "0.0.0.0:5000", "wsgi:lightstack"]
